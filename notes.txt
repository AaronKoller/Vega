1. SETUP environment
Extensions:
CTRL+SHIFT+P 'Install ext'  ==> Install extensions
angula v2 typescript - John Papa
ASP.Net Helper - schneiderpat
Auto Import - Steoates
Beautify - HookyQR
C# - Microsoft
C# Extensions - jchannon
Docker - Microsoft
Mssql - Microsoft
Rest Client - Huachao Mao

Install NPM  (templates
npm install -g yo
npm install -g yo generator-aspnetcore-spa


to ceate a project
1. go to the new folder
2. type: yo aspnetcore-spa
	a. Angular
	b. unit test: N


to set my machine to development
https://docs.microsoft.com/en-us/aspnet/core/fundamentals/environments
1. commandline $Env:ASPNETCORE_ENVIRONMENT = "Development"


1. Also Install DotNetWatch to keep an eye on code that changes in the C# side of things that webPack cannot catch
https://github.com/aspnet/DotNetTools/tree/dev/src/Microsoft.DotNet.Watcher.Tools
2. In vega.csproj paste 
<Project ToolsVersion="15.0" Sdk="Microsoft.NET.Sdk.Web">
  <ItemGroup>
    <DotNetCliToolReference Include="Microsoft.DotNet.Watcher.Tools" Version="1.0.0" />
  </ItemGroup>
3. save
4. 'dotnet restore' - This will get the new package in the csproj file
5. 'dotnet watch restore'

Install Entity Framework from VS Code terminal
1. dotnet add Microsoft.EntityFrameworkCore.SqlServer  (from VS Studio)

1. Add EntityFramework CLI
2. IN the .csproj
<ItemGroup>
    <DotNetCliToolReference Include="Microsoft.EntityFrameWorkCore.Tools.DotNet" Version="1.0.0" />
</ItemGroup>
3. 'DotNet restore'
4. after install 'dotnet ef' (optional)
5. dotnet ef migrations --help (optional)
6. dotnet ef migrations --help (optional)


Ef Create migrations
dotnet add package Microsoft.EntityFrameworkCore.Design
dotnet restore
dotnet ef migrations add InitialModel

dotnet ef migrations remove  -- will remove the last migration that was now applied to the db
dotnet ef database update 0 -- will remove the last migration that was applied to the db

keys:
CTRL + .  - add using statements to the top